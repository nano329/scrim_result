# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UiDraft.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from main import MemberNick, setPath
from team import team_search, team_write
from meta import member_accessId, DownloadMeta
import os, time, datetime

class Ui_Dialog(QtWidgets.QMainWindow):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(400, 250)
        self.StartTime = QtWidgets.QDateTimeEdit(Dialog)
        self.StartTime.setGeometry(QtCore.QRect(150, 60, 200, 20))
        self.StartTime.setObjectName("StartTime")
        self.StartTime.setDisplayFormat("yyyy-MM-dd hh:mm:ss")
        self.StartTime.setCalendarPopup(True)

        self.EndTime = QtWidgets.QDateTimeEdit(Dialog)
        self.EndTime.setGeometry(QtCore.QRect(150, 90, 200, 20))
        self.EndTime.setObjectName("EndTime")
        self.EndTime.setDisplayFormat("yyyy-MM-dd hh:mm:ss")
        self.EndTime.setCalendarPopup(True)

        self.RiderSelect = QtWidgets.QComboBox(Dialog)
        self.RiderSelect.setGeometry(QtCore.QRect(150, 20, 95, 20))
        self.RiderSelect.setObjectName("RiderSelect")
        self.RiderSelect.addItem("")
        users = list(member_accessId.keys())
        for i in users:
            self.RiderSelect.addItem(i)

        self.Label_Starttime = QtWidgets.QLabel(Dialog)
        self.Label_Starttime.setGeometry(QtCore.QRect(50, 60, 64, 20))
        self.Label_Starttime.setObjectName("Label_Starttime")

        self.Label_Endtime = QtWidgets.QLabel(Dialog)
        self.Label_Endtime.setGeometry(QtCore.QRect(50, 90, 64, 20))
        self.Label_Endtime.setObjectName("Label_Endtime")

        self.Label_Rider = QtWidgets.QLabel(Dialog)
        self.Label_Rider.setGeometry(QtCore.QRect(50, 20, 64, 20))
        self.Label_Rider.setObjectName("Label_Rider")
        #self.Label_Rider.setDisabled()

        self.Label_VS = QtWidgets.QLabel(Dialog)
        self.Label_VS.setGeometry(QtCore.QRect(190, 170, 31, 16))
        self.Label_VS.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_VS.setObjectName("Label_VS")

        self.RiderInput = QtWidgets.QLineEdit(Dialog)
        self.RiderInput.setGeometry(QtCore.QRect(260, 20, 95, 20))
        self.RiderInput.setObjectName("RiderInput")

        self.BlueTeam = QtWidgets.QLineEdit(Dialog)
        self.BlueTeam.setGeometry(QtCore.QRect(130, 170, 51, 21))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.BlueTeam.setPalette(palette)
        font = QtGui.QFont()
        font.setItalic(False)
        self.BlueTeam.setFont(font)
        self.BlueTeam.setAlignment(QtCore.Qt.AlignCenter)
        self.BlueTeam.setObjectName("BlueTeam")

        self.RedTeam = QtWidgets.QLineEdit(Dialog)
        self.RedTeam.setGeometry(QtCore.QRect(230, 170, 51, 21))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.RedTeam.setPalette(palette)
        self.RedTeam.setAlignment(QtCore.Qt.AlignCenter)
        self.RedTeam.setObjectName("RedTeam")

        self.Label_Directory = QtWidgets.QLabel(Dialog)
        self.Label_Directory.setGeometry(QtCore.QRect(50, 130, 64, 20))
        self.Label_Directory.setObjectName("Label_Directory")



        self.DirectoryText = QtWidgets.QLineEdit(Dialog)
        self.DirectoryText.setGeometry(QtCore.QRect(150, 130, 161, 20))
        self.DirectoryText.setObjectName("DirectoryText")

        self.BrowseButton = QtWidgets.QPushButton(Dialog)
        self.BrowseButton.setGeometry(QtCore.QRect(320, 130, 32, 21))
        self.BrowseButton.setObjectName("toolButton")
        self.BrowseButton.pressed.connect(self.browsefiles)

        self.StartButton = QtWidgets.QPushButton(Dialog)
        self.StartButton.setGeometry(QtCore.QRect(160, 210, 93, 28))
        self.StartButton.setObjectName("pushButton")
        self.StartButton.pressed.connect(self.search)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        now = datetime.datetime.now()
        self.StartTime.setDate(datetime.date(now.year, now.month, now.day))
        self.EndTime.setDate(datetime.date(now.year, now.month, now.day))
        self.RiderSelect.setItemText(0, _translate("Dialog", "직접 입력"))
        self.Label_Starttime.setText(_translate("Dialog", "시작 시간"))
        self.Label_Endtime.setText(_translate("Dialog", "종료 시간"))
        self.Label_Rider.setText(_translate("Dialog", "라이더명"))
        self.Label_VS.setText(_translate("Dialog", "VS"))
        self.BlueTeam.setText(_translate("Dialog", "BLUE"))
        self.RedTeam.setText(_translate("Dialog", "RED"))
        self.Label_Directory.setText(_translate("Dialog", "저장 경로"))
        self.BrowseButton.setText(_translate("Dialog", "..."))
        self.StartButton.setText(_translate("Dialog", "시작"))

    def browsefiles(self):
        print("adsf")
        fname = QtWidgets.QFileDialog.getExistingDirectory(self, '열기', './')
        self.DirectoryText.setText(fname)

    def Setmetadata_Event(self):
        print("self.setmetadfdsf")
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QMessageBox.Question)
        msg.setWindowTitle("메타데이터 누락")
        msg.setText("")
        msg.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
        buttonY = msg.button(QMessageBox.Yes)
        buttonY.setText('다운로드')
        buttonN = msg.button(QMessageBox.No)
        buttonN.setText('무시')
        reply = msg.exec_()


        if reply == QMessageBox.Yes:
            DownloadMeta()
            return 1
        elif reply == QMessageBox.No:
            return 2


    def search(self):
        print("self.search")
        if not setPath:
            if self.Setmetadata_Event() == 1:
                return
        rider = self.RiderSelect.currentText()
        if rider == "직접 입력":
            rider = self.RiderInput.text()
        else:
            rider = MemberNick(rider)
        print(rider)
        print(self.StartTime.text())

        speed_result, item_result = team_search(rider, self.StartTime.text(), self.EndTime.text(), self.BlueTeam.text(), self.RedTeam.text())
        date = self.StartTime.text().split()[0]
        team_write(speed_result, item_result, self.BlueTeam.text(), self.RedTeam.text(), date, date.replace('-', '.') + ' ' + self.BlueTeam.text() + ' vs ' + self.RedTeam.text(), self.DirectoryText.text())


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
